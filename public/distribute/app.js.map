{"version":3,"file":"app.js","mappings":"oWAAA,MAAMA,EAAOC,SAASC,eAAe,iBACrCF,EAAKG,YAAc,GACnB,IAAIC,EAAU,EAEd,MAoBMC,EAAOJ,SAASC,eAAe,iBAClBD,SAASC,eAAe,UAGhCI,iBAAiB,SAAgBC,GAAM,OAAD,6BAC7CA,EAAEC,iBACF,MAAMC,EAAW,IAAIC,SAASL,GACxBM,EAAWC,OAAOC,YAAYJ,GAEpC,IACI,GAAIL,EAAU,EAAG,CACb,MAAMU,QAAiBC,MAAM,eAAgB,CACzCC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,UACbC,QAAS,CACL,eAAgB,oBAEpBC,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAUd,KAEjBe,QAAaZ,EAASa,OAC5BC,QAAQC,IAAIH,SA5CWI,EA6CKJ,EA7CyD,OAAD,6BAC9F,GAAI1B,EAEA,GADAA,EAAKG,YAAc,GACf2B,EAAIC,eAAeC,OAAS,EAAG,CAC/B,IAAIC,EAAM,+BACV,IAAK,IAAIC,KAAQJ,EAAIC,eACjBE,GAAO,IAAIC,EAAKC,SAEpBnC,EAAKG,YAAc8B,EACnBjC,EAAKoC,UAAUC,IAAI,WACnBjC,EAAU,C,MAEVJ,EAAKG,YAAc,6BACnBH,EAAKoC,UAAUE,OAAO,UAGlC,KA8BclC,G,EAGR,MAAOmC,GACLX,QAAQC,IAAI,uBAAwB,KAAMU,EAAK,KAAM,uB,CAlD/B,IAAOT,CAoDrC,K,ICpDoB,M","sources":["webpack://tok/./public/index.ts","webpack://tok/webpack/startup"],"sourcesContent":["const perr = document.getElementById('error-message') as HTMLParagraphElement;\r\nperr.textContent = '';\r\nlet counter = 0;\r\n\r\nconst viewMessageFromServer = async (res: {errorsMessages: {message: string; field: string}[]}) => {\r\n    if (perr) {\r\n        perr.textContent = '';\r\n        if (res.errorsMessages.length > 0) {\r\n            let msg = 'Не валидные значения полей: ';\r\n            for (let emsg of res.errorsMessages) {\r\n                msg += ` ${emsg.field} `\r\n            }\r\n            perr.textContent = msg;\r\n            perr.classList.add('errtext');\r\n            counter = 0;\r\n        } else {\r\n            perr.textContent = 'Ваше сообщение отправлено.';\r\n            perr.classList.remove('errtext');\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nconst form = document.getElementById(\"contacts-form\") as HTMLFormElement;\r\nconst sendButton = document.getElementById(\"submit\") as HTMLButtonElement;\r\n\r\n\r\nsendButton.addEventListener(\"click\", async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(form);\r\n    const sendData = Object.fromEntries(formData);\r\n    \r\n    try {\r\n        if (counter < 3) {\r\n            const response = await fetch('/sendMessage', {\r\n                method: \"POST\", \r\n                mode: \"cors\",  \r\n                cache: \"no-cache\",  \r\n                credentials: \"include\", \r\n                headers: { \r\n                    \"Content-Type\": \"application/json\",   \r\n                },\r\n                redirect: \"follow\", \r\n                referrerPolicy: \"no-referrer\", \r\n                body: JSON.stringify(sendData),   \r\n              });\r\n              const resp = await response.json();\r\n              console.log(resp);\r\n              await viewMessageFromServer(resp);\r\n              counter++;\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log('------- *** --------', '\\n', err, '\\n', '------- *** --------');\r\n    }\r\n});","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[112]();\n"],"names":["perr","document","getElementById","textContent","counter","form","addEventListener","e","preventDefault","formData","FormData","sendData","Object","fromEntries","response","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","resp","json","console","log","res","errorsMessages","length","msg","emsg","field","classList","add","remove","err"],"sourceRoot":""}